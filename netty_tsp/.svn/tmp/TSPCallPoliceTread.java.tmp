package com.samton.server;

import com.samton.util.DocumentCommun;
import com.samton.util.LogProducerUtils;
import io.netty.util.internal.logging.InternalLogger;
import io.netty.util.internal.logging.InternalLoggerFactory;
import msg.TSPCallPolice;
import msg.TSPFatigueDriving;
import msg.TSPWaitWakeUp;
import org.bson.Document;
import redis.clients.jedis.Jedis;

import java.util.LinkedList;

/**
 * Created with IntelliJ IDEA.
 * 作者: duyingfeng
 * 日期: 17-9-12
 * 说明:
 * To change this template use File | Settings | File Templates.
 */
public class TSPCallPoliceTread implements Runnable {

    private static final InternalLogger log = InternalLoggerFactory.getInstance(TSPCallPoliceTread.class);
    private TSPCallPolice speedPolice;
    private Jedis jedis;
    private LogProducerUtils kafk;
    private LinkedList lists;

    public TSPCallPoliceTread(LinkedList lists, Jedis jedis, LogProducerUtils kafk) {
        // this.speedPolice = speedPolice;
        this.lists = lists;
        this.jedis = jedis;
        this.kafk = kafk;
    }

    public void run() {
        for (int i = 0; i < lists.size(); i++) {

            speedPolice = (TSPCallPolice) lists.get(i);

            String vin = "";
            String uuid = "";

            if (jedis.hmget("carEquipment", speedPolice.getTermCode()).get(0) != null) {
                vin = jedis.hmget("carEquipment", speedPolice.getTermCode()).get(0).split("car_card=")[1].split("}")[0];
                if (jedis.hmget("carvinuuid", vin) != null) {
                    uuid = jedis.hmget("carvinuuid", vin).get(0);

                    speedPolice.setVinCodee(vin);
                    speedPolice.setUuiduuid(uuid);


                    Document doc = DocumentCommun.CallPolice2Doc(speedPolice);

                    kafk.send("alarmInfo", doc.toJson());
                    log.debug("超速报警====" + doc.toJson());
                }
            }

        }
    }
}
